<?php
if(!defined('NL')) define("NL", "\n");

//Dont forget to go into "Input Formats" in admin, and set the items to use the "TLM ..." filter.

# Implementation of hook_filter().

function tlm_album_filter_info(){
	$filters['album'] = array(
		'title' => 'TLM Album Tag',
		'description' => 'Substitutes a special TLM Album Tag with the actual code.',	
		'cache' => false,
		'process callback' => 'replace_tlm_album_tags_d7'
	);
	
	return $filters;
}


function replace_tlm_album_tags_d7($text, $filter, $format, $langcode, $cache, $cache_id) {
	return replace_tlm_album_tags($text);
}


$currentId;
function replace_tlm_album_tags( $str ) {
	global $currentId;
         # [album|node_id]
           # no slashes around this path!
         $matchlink = '';
         $orig_match = '';
   
		if($currentId == ""){ $currentId = 0;}
		
    	//$str = preg_replace_callback("/(\[)album(\|).*(\])/","album_replace_helper", $str);		//has issue with new lines, each [] must have newline
		$str = preg_replace_callback("/\[album\|([^]]+)\]/","album_replace_helper", $str);
         
         return $str;
}

function album_replace_helper($matches){
	global $currentId;
	
	$match = $matches[0];
	$match = substr( $match, 1, ( strlen( $match ) - 2 ) );
	$match = explode( "|", $match );
	 
	$matchlink = tlm_album_render_album($match[1], $currentId, isset($match[2]) ? $match[2] : null);
	$currentId++;
	
	return $matchlink;
}


       
function tlm_album_render_album($nodeId, $idToUse, $title = null){
	
	$output = "";
	$node = node_load($nodeId);
	
	if($node){
		if($node->type == "album"){		
			$output .= '<div class="highslideImageGalleryContainer">' . NL;
				if (user_access('administer blocks')){
					$output .= '<div class="blockEditWrapper">';				
					$output .= l('', 'node/' . $node->nid . '/edit', array('query' => drupal_get_destination(),  'attributes' => array('class' => 'blockEditLink', 'alt' => 'Edit', 'title' => 'Edit Album ' . $nodeId)));
					$output .= '</div>';
				}
	
				if($title === ""){
					$output .= '<h3>' . $title. '</h3>' . NL;
				}else if($title == null){
					$output .= '<h3>' . $node->title. '</h3>' . NL;
				}else{		
					//Dont put out title		
					//$output .= '<h3></h3>' . NL;
				}
				
				$output .= '<div id="galleryGroupContainer' . $idToUse . '" class="highslideImageGallery">' . NL;		//class="galleryGroupContainer"
				
					//Shows the thumbnail as the first image, and its caption.
					//$output .= '	<a id="galleryGroupLink' . $idToUse . '" class="highslideImageGallery" href="/' . $node->field_thumbnail[0]['filepath'] . '" ><img class="thumbnail" src="/' . $node->field_thumbnail[0]['filepath'] . '" alt="' . $node->field_thumbnail_caption[0]['value']  . '" /></a>' . NL;
					
					//Does not show the thumbnail as the first image, the thumbnail caption is not used. Needs to unset the first image in the set.
					$output .= '<a id="galleryGroupLink' . $idToUse . '" class="highslideImageGallery" href="' . file_create_url($node->field_album_images['und'][0]['uri']) . '" >';
					if(isset($node->field_album_thumbnail_image['und']) && $node->field_album_thumbnail_image['und'][0]['uri']  != ""){
						$output .= '<img id="galleryGroupContainer' . $idToUse . '_Thumbnail" class="thumbnail styled" src="' . file_create_url($node->field_album_thumbnail_image['und'][0]['uri']) . '" alt="' . $node->field_album_images['und'][0]['title']  . '" />';
					}else{
						$output .= $node->field_album_images['und'][0]['title'];
					}
					$output .= '</a>' . NL;
		
					unset($node->field_album_images['und'][0]);
					
					
					$output .= '	<div class="hidden">' . NL;
						foreach($node->field_album_images['und'] as $index => $anImage){			
							$output .= '	<a href="' . file_create_url($anImage['uri']) . '" class="highslideImageGallery"><img class="thumbnail styled" src="' . (isset($node->field_album_thumbnail_image['und']) ? file_create_url($node->field_album_thumbnail_image['und'][0]['uri']) : '') .'" alt="' . $anImage['title'] . '" /></a>' . NL;			//Dont load all the album images by the browser. Load the thumbnail as the image, the link is proper //$anImage['filepath'] 
						}
					$output .= '	</div><!-- /.hidden -->' . NL;
									
				$output .= '</div><!-- /#galleryGroup*Container -->' . NL;
			$output .= '</div><!-- /.highslide-gallery -->' . NL;
			
			
		}else{
			$output = "--Node selected (id: " . $nodeId . ") is not of type Album--";
		}
		
		
		
		
	}else{
		$output = "--Invalid Album node id: " . $nodeId . "--";
	}
	
	return $output;
}








function tlm_album_menu(){
	$items = array();	

 
	$items['admin/config/tlmalbum/settings'] = array(
		'title' => 'Album Module Settings',
		'description' => t('Album Module Settings'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('tlm_album_admin_settings_page'),
		'access callback' => 'user_access',
    	'access arguments' => array('administer site configuration'),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		//'weight' => 0
	);
	
	$items['admin/config/tlmalbum'] = array(
		'title' => 'Album Module Settings',
		'description' => t('Album Module Settings'),
		'page callback' => 'drupal_get_form',
		'page arguments' => array('tlm_album_admin_settings_page'),
		'access callback' => 'user_access',
    	'access arguments' => array('administer site configuration'),
		//'weight' => 0
	);
	
	
	return $items;
}


function tlm_album_admin_settings_page(){
	$highslideJSPath = '_highslide/highslide.js';
	
	$form['info_msg'] = array(
		'#value' => t('<h3>Settings</h3>')
	);
	
	$form['codewise_minimal_include'] = array(
		'#type' => 'checkbox',
		'#title' => t('Include Codewise minimal Javascript (misc.js)'),
		'#default_value' => variable_get('album_include_codewise_minimal', true)
	);
	
	$form['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save')	
	);
	
	
	
	$form[] = array(
		'#value' => t('<br><br><h3>Status</h3>')
	);
	
	if(file_exists($highslideJSPath)){
		$form[] = array(
			'#value' => '- <span style="color:green;">Highslide Installed</span>' . '<br>'
		);
	}else{		
		$form[] = array(
			'#value' => '- <span style="color: red;">Highslide missing</span> - /' . $highslideJSPath . '<br>'
		);
	}
	
//	if(variable_get('album_include_codewise_minimal', true) == true){
//		if(file_exists(drupal_get_path('module', "tlm_album") . '/misc.js')){
//			$form[] = array(
//				'#value' => '- <span style="color:green;">Codewise Minimal JS Available</span>'
//			);
//		}else{			
//			$form[] = array(
//				'#value' => '- <span style="color: red;">Codewise Minimal JS missing</span> - /' . drupal_get_path('module', "tlm_album") . '/misc.js'
//			);
//		}
//	}
	
	return $form;
	
}



function tlm_album_admin_settings_page_submit($form, &$form_values){
//	if($form_values['values']['codewise_minimal_include'] == true){
//		variable_set('album_include_codewise_minimal', true);
//	}else{
//		variable_set('album_include_codewise_minimal', false);	
//	}
}


function tlm_album_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL){
	if($op == 'view'){
//		if(variable_get('album_include_codewise_minimal', true) == true){
//			drupal_add_js(drupal_get_path('module', "tlm_album") . '/misc.js', 'module');
//		}
		
		drupal_add_css(drupal_get_path('module', "tlm_album") . '/style.css', 'module');
	}
}
